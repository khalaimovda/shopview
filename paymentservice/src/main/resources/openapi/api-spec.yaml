openapi: 3.0.3
info:
  title: Payment Service API
  description: API для управления заказами и клиентами автомастерской
  version: 1.0
servers:
  - url: http://payment-service.com/v1
paths:
  /api/balance:
    get:
      summary: Get current balance
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            example: 13
          description: ID of the user
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
    post:
      summary: Add balance
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      description: Create user balance if it does not exist and add amount in his balance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBalanceRequest'
      responses:
        '200':
          description: Balance is successfully replenished
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'

  /api/payments:
    post:
      summary: Make payment
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment was processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSuccessResponse'
        '400':
          description: Bad Request (Insufficient funds)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientFundsError'
components:
  schemas:
    Balance:
      type: object
      required:
        - balance
      properties:
        balance:
          type: number
          format: decimal
          x-java-type: java.math.BigDecimal
          example: 128.83

    AddBalanceRequest:
      type: object
      required:
        - userId
        - amount
      properties:
        userId:
          type: integer
          format: int64
          example: 13
        amount:
          type: number
          format: decimal
          x-java-type: java.math.BigDecimal
          example: 44.15

    PaymentRequest:
      type: object
      required:
        - userId
        - amount
      properties:
        userId:
          type: integer
          format: int64
          example: 13
        amount:
          type: number
          format: decimal
          x-java-type: java.math.BigDecimal
          example: 44.15

    PaymentSuccessResponse:
      type: object
      required:
        - balance
      properties:
        balance:
          type: number
          format: decimal
          x-java-type: java.math.BigDecimal
          description: Remaining balance after payment
          example: 132.45

    InsufficientFundsError:
      type: object
      required:
        - error
        - requiredAmount
        - availableBalance
      properties:
        error:
          type: string
          example: Insufficient funds
        requiredAmount:
          type: number
          format: decimal
          x-java-type: java.math.BigDecimal
          example: 224.81
        availableBalance:
          type: number
          format: decimal
          x-java-type: java.math.BigDecimal
          example: 150.00

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'com.github.ben-manes.caffeine:caffeine'
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$projectDir/src/main/resources/openapi/api-spec.yaml")
	outputDir.set("$projectDir/build/generated")
	ignoreFileOverride.set("$projectDir/src/main/resources/openapi/.openapi-generator-java-sources.ignore")
	modelPackage.set("com.github.khalaimovda.paymentservice.domain")
	invokerPackage.set("com.github.khalaimovda.paymentservice")
	apiPackage.set("com.github.khalaimovda.paymentservice.api")
	configOptions.set([
			hideGenerationTimestamp: "true",
			requestMappingMode: "controller",
			interfaceOnly: "false", // "true": When your own controller is ready (then you will need Main class too)
			library: "spring-boot",
			reactive: "true",
			useSpringBoot3: "true",
			useJakartaEe: "true",
			useTags: "true",
			dateLibrary: "java8",
			openApiNullable: "false",
			serializableModel: "true",
			returnSuccessCode: "true"
	])
}

openApiGenerate {
	generatorName.set("java")
	inputSpec.set("$rootDir/paymentservice/src/main/resources/openapi/api-spec.yaml")
	outputDir.set("$projectDir/build/generated")
	ignoreFileOverride.set("$rootDir/paymentservice/src/main/resources/openapi/.openapi-generator-java-sources.ignore")
	modelPackage.set("com.github.khalaimovda.showcase.domain")
	invokerPackage.set("com.github.khalaimovda.showcase")
	apiPackage.set("com.github.khalaimovda.showcase.api")
	configOptions.set([
			hideGenerationTimestamp: "true",
			library                : "webclient",
			useJakartaEe           : "true",
			useTags                : "true",
			openApiNullable        : "false",
			serializableModel      : "true"
	])
}

sourceSets {
	main {
		java {
			srcDir "${projectDir}/build/generated/src/main/java" // Use generated classed
		}
	}
}
